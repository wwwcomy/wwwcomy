String getWarewhereCode(String WHID, DBManager dbm){
	Qbq3Form bean = dbm.findByPK("T_DIC_WAREWHERE",WHID,context);
	if (bean!=null)
		return bean.get("CODE");
	return "unknown";
}
void checkStock() {
	String ID = form.get("ID");
	String warehouseID = form.get("WAREHOUSE");
	String subOrderID = form.get("SUBORDER_ID");
	if(StringUtil.isBlankOrNull(subOrderID))
		throw new Warning("子订单号不能为空");
	DBManager dbm = context.getDBM();
	// 取所有明细中 每个库位,某种商品的移库数量之和, 检查是否大于库存数量
	// 201209加入批次维度
	String sql = "select PRO_WH,PRODUCTID,BATCH,sum(PRO_COUNT) from T_WM_OUTDETAIL where HEADID='"+ID+"' and SUBORDERID='"+subOrderID+"' group by PRO_WH, PRODUCTID, BATCH";
	String[][] rs = dbm.getResultStrArray(sql, 4, null);
	int l = rs.length;
	String checkSql = "select t_1.PRO_COUNT,t_2.CODE,t_1.WAREHOUSE,t_1.WAREWHERE,t_1.PRODUCTID,t_1.BATCH from V_WM_STOCKWHEREBATCH t_1,T_WM_PRO t_2 where 1=2 ";
	for(int i = 0; i<l;i++){
		String WHID = rs[i][0];
		String proID = rs[i][1];
		String batch = rs[i][2];
		checkSql += " or (t_1.PRODUCTID=t_2.ID and t_1.WAREHOUSE='"+warehouseID+"' and t_1.WAREWHERE='"+WHID+"' and t_1.PRODUCTID='"+proID+"' and t_1.BATCH="+batch+")";
	}
	Map INDEX = new HashMap();
	String[][] result = dbm.getResultStrArray(checkSql, 6, null);
	l = result.length;
	for (int i=0;i<l;i++) {
		// 0:仓位-批次库存数量 1:产品货号 
		String WHID = result[i][3];
		String proID = result[i][4];
		String batch = result[i][5];
		String key = warehouseID+":"+WHID+":"+proID+":"+batch;
		INDEX.put(key, i);
	}
	l = rs.length;
	for(int i = 0; i<l;i++){
		String WHID = rs[i][0];
		String proID = rs[i][1];
		String batch = rs[i][2];
		String key = warehouseID+":"+WHID+":"+proID+":"+batch;
		
		Integer row = (Integer)INDEX.get(key);
		if (row!=null) {
			int transCount = Integer.valueOf(rs[i][3]); // 应出库数量
			int kcCount = Integer.valueOf(result[row][0]); // 仓位-批次库存数量
			String proWmcode = result[row][1]; // 产品货号
			if(transCount>kcCount){
				String whCode = getWarewhereCode(WHID, dbm);
				//System.out.println("审批失败,商品 '"+proWmcode+"' 库存不足, 仓位:"+whCode+",批次:"+batch+", 出库数量:"+transCount+", 现有仓位库存:"+t);
				throw new Warning("审批失败,商品 '"+proWmcode+"' 库存不足, 仓位:"+whCode+",批次:"+batch+", 出库数量:"+transCount+", 现有仓位库存:"+kcCount);
			}
		}else{
			String whCode = getWarewhereCode(WHID, dbm);
			throw new Warning("审批失败,商品无库存, 仓位:"+whCode+",批次:"+batch+", 出库数量:"+transCount);
		}
	}
}
checkStock();